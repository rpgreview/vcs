// generated by Fast Light User Interface Designer (fluid) version 1.0106

#ifndef ADMPnew_h
#define ADMPnew_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *a_Exit;
#include <FL/Fl_Button.H>
extern Fl_Button *a_EBExit;
extern Fl_Button *a_EBCancel;
extern Fl_Button *a_EBSaveExit;
#include <FL/Fl_Input.H>
extern Fl_Input *a_EText;
extern Fl_Double_Window *a_Copyright;
extern Fl_Button *a_CAccept;
extern Fl_Button *a_CDontAccept;
#include <FL/Fl_Output.H>
extern Fl_Output *a_CMessage;
extern Fl_Double_Window *a_HelpWindow;
#include <FL/Fl_Browser.H>
extern Fl_Browser *a_HelpList;
extern Fl_Button *a_HelpClose;
extern Fl_Double_Window *a_WeaponWindow;
extern Fl_Browser *a_WSearchList;
extern Fl_Browser *a_WSearchDetails;
extern Fl_Button *a_WSAccept;
extern Fl_Button *a_WSCancel;
extern Fl_Double_Window *a_DetailsWindow;
extern Fl_Browser *a_EDInitiatorDetails1;
#include <FL/Fl_Text_Display.H>
extern Fl_Text_Display *a_EDInitiatorDetails2;
extern Fl_Browser *a_EDDefenderDetails1;
extern Fl_Text_Display *a_EDDefenderDetails2;
extern Fl_Double_Window *a_QkMonsterAdd;
extern Fl_Input *aQkAdd_Name;
extern Fl_Input *aQkAdd_CRating;
#include <FL/Fl_Counter.H>
extern Fl_Counter *aQkAdd_Count;
extern Fl_Input *aQkAdd_Icon;
extern Fl_Button *aQkAdd_MonstIconLoad;
extern Fl_Input *aQkAdd_HPMax;
extern Fl_Input *aQkAdd_Regeneration;
extern Fl_Input *aQkAdd_ACNormal;
extern Fl_Input *aQkAdd_ACTouch;
extern Fl_Input *aQkAdd_ACFlatFoot;
extern Fl_Input *aQkAdd_InitBonus;
extern Fl_Input *aQkAdd_Speed;
extern Fl_Input *aQkAdd_ResistFire;
extern Fl_Input *aQkAdd_ResistAcid;
extern Fl_Input *aQkAdd_ResistCold;
extern Fl_Input *aQkAdd_ResistElec;
extern Fl_Input *aQkAdd_ResistSonic;
extern Fl_Input *aQkAdd_SaveFort;
extern Fl_Input *aQkAdd_SaveReflex;
extern Fl_Input *aQkAdd_SaveWill;
extern Fl_Input *aQkAdd_NoAttacks;
extern Fl_Input *aQkAdd_SpellResistance;
extern Fl_Input *aQkAdd_DamReductionHP;
extern Fl_Input *aQkAdd_DamReductionWeapon;
#include <FL/Fl_Choice.H>
extern Fl_Choice *aQkAdd_DamReductionType;
extern Fl_Browser *aQkAdd_WeaponSelector;
extern Fl_Input *aQkAdd_WeaponName;
extern Fl_Button *aQkAdd_WeaponSearch;
extern Fl_Input *aQkAdd_WeaponAttkBonus1;
extern Fl_Input *aQkAdd_WeaponAttkBonus2;
extern Fl_Input *aQkAdd_WeaponAttkBonus3;
extern Fl_Input *aQkAdd_WeaponAttkBonus4;
extern Fl_Input *aQkAdd_WeaponDamage;
extern Fl_Input *aQkAdd_WeaponCritical;
extern Fl_Input *aQkAdd_WeaponMagicBonus;
extern Fl_Input *aQkAdd_WeaponRange;
extern Fl_Input *aQkAdd_WeaponReach;
extern Fl_Input *aQkAdd_WeaponNoAttacks;
extern Fl_Input *aQkAdd_WeaponSpecialMessage;
extern Fl_Button *aQkAdd_Accept;
extern Fl_Button *aQkAdd_Cancel;
extern Fl_Input *aQkAdd_WeaponFumble;
extern Fl_Choice *aQkAdd_WeaponCritAdjustment;
extern Fl_Choice *aQkAdd_WeaponSize;
extern Fl_Input *aQkAdd_WeaponAttackTable;
extern Fl_Input *aQkAdd_SavePoison;
extern Fl_Input *aQkAdd_SaveDisease;
extern Fl_Input *aQkAdd_NoInGroup;
extern Fl_Double_Window *a_ActionWindow;
#include <FL/Fl_Tabs.H>
extern Fl_Tabs *a_CTActions;
#include <FL/Fl_Tile.H>
extern Fl_Tile *a_CTMelee;
extern Fl_Input *a_CTMeleeAC;
extern Fl_Input *a_CTMeleeBAB;
extern Fl_Input *a_CTMeleeRoll;
extern Fl_Button *a_CTCalc1;
extern Fl_Input *a_CTMeleeDamage;
extern Fl_Input *a_CTMeleeStun;
extern Fl_Input *a_CTMeleeBleeding;
extern Fl_Input *a_CTMeleeInactive;
#include <FL/Fl_Check_Browser.H>
extern Fl_Check_Browser *a_CTCombatMods;
extern Fl_Browser *a_CTWeaponUsed;
extern Fl_Browser *a_CTDefender;
extern Fl_Button *a_CTthisAttack;
extern Fl_Button *a_CTallAttacksDone;
extern Fl_Check_Browser *a_CTSpecialAttacks;
extern Fl_Browser *a_CTWeaponDetails;
extern Fl_Output *a_CTAttacksLeft;
extern Fl_Output *a_CTACBreakdown;
extern Fl_Input *a_CTMeleeACAdjustments;
extern Fl_Input *a_CTMeleeBABAdjustments;
extern Fl_Input *a_CTMeleeDmgAdjustments;
extern Fl_Button *a_CTRollD20;
extern Fl_Button *a_CTRollDamage;
extern Fl_Tile *a_CTSpell;
extern Fl_Check_Browser *a_CTSpellEffects;
extern Fl_Counter *a_CTSpellLevel;
extern Fl_Input *a_CTSpellDC;
extern Fl_Input *a_CTSpellMods;
extern Fl_Button *a_CTSpellCalc;
extern Fl_Input *a_CTSpellDamage;
extern Fl_Input *a_CTSpellStunned;
extern Fl_Input *a_CTSpellBleeding;
extern Fl_Input *a_CTSpellInactive;
extern Fl_Input *a_CTSpellDmgMods;
extern Fl_Button *a_CTSpellSAP;
extern Fl_Button *a_CTSpellSAM;
extern Fl_Button *a_CTSpellUSA;
extern Fl_Button *a_CTSpellAllDone;
extern Fl_Button *a_CTSpellAcceptThis;
extern Fl_Check_Browser *a_CTSpellModifiers;
extern Fl_Check_Browser *a_CTSpellSaved;
extern Fl_Check_Browser *a_CTSpellEnergyType;
extern Fl_Tile *a_CTOther;
extern Fl_Check_Browser *a_CTOtherActions;
extern Fl_Button *a_CTAcceptOtherAction;
extern Fl_Input *a_CTOtherHealHP;
extern Fl_Input *a_CTOtherHealStun;
extern Fl_Input *a_CTOtherHealBleeding;
extern Fl_Input *a_CTOtherHealInactive;
extern Fl_Input *a_CTOtherHealSkillMods;
extern Fl_Browser *a_CTOtherMessages;
extern Fl_Check_Browser *a_CTOtherFlags;
extern Fl_Counter *a_CTOtherSpellLevel;
extern Fl_Tile *a_CTSpellDetails;
#include <FL/Fl_Help_View.H>
extern Fl_Help_View *a_CTSpellHTMLDetails;
extern Fl_Input *a_CTSpellDetailsSearch;
extern Fl_Browser *a_CTSpellDetailsList;
extern Fl_Tile *a_CTMonsterDetails;
extern Fl_Help_View *a_CTMonsterHTMLDetails;
extern Fl_Tile *a_CTNotes;
extern Fl_Browser *a_CTNotesDetails;
extern Fl_Tile *a_CTDiceRoller;
extern Fl_Browser *a_CTDRList1;
extern Fl_Browser *a_CTDRList2;
extern Fl_Browser *a_CTDRList3;
extern Fl_Browser *a_CTDRList4;
extern Fl_Browser *a_CTDRList5;
extern Fl_Browser *a_CTDRList6;
extern Fl_Browser *a_CTDRList7;
extern Fl_Browser *a_CTDRList8;
extern Fl_Button *a_CTDRRefresh;
extern Fl_Browser *a_CTMessage;
extern Fl_Browser *a_CTDefenderDetails;
extern Fl_Browser *a_CTInitiatorDetails;
extern Fl_Browser *a_CBActionType;
extern Fl_Button *a_CTCancel;
#include "gridMap.h"
extern Fl_Double_Window *a_WExternalGridMap;
extern gridMap *externalGridMap;
extern Fl_Double_Window *a_notesWindow;
extern Fl_Input *a_NotesDescription;
extern Fl_Input *a_ObjectIcon;
extern Fl_Button *a_ObjectIconSelect;
extern Fl_Input *a_ObjectWidth;
extern Fl_Input *a_ObjectHeight;
extern Fl_Button *a_NotesAccept;
extern Fl_Button *a_NotesCancel;
extern Fl_Button *a_NotesDelete;
extern Fl_Double_Window *a_IconWindow;
extern Fl_Tabs *t_IconSelector;
extern Fl_Tile *t_PlayerIcons;
#include <FL/Fl_Scroll.H>
extern Fl_Scroll *s_PlayerIcons;
extern Fl_Tile *t_MonsterIcons;
extern Fl_Scroll *s_MonsterIcons;
extern Fl_Tile *t_AnimalIcons;
extern Fl_Scroll *s_AnimalIcons;
extern Fl_Tile *t_ObjectIcons;
extern Fl_Scroll *s_ObjectIcons;
extern Fl_Tile *t_Other;
extern Fl_Scroll *s_OtherIcons;
extern Fl_Button *b_ISCancel;
extern Fl_Double_Window *a_addToNewGroup;
extern Fl_Input *a_addNewName;
#include <FL/Fl_Check_Button.H>
extern Fl_Check_Button *a_addNewDisabled;
extern Fl_Button *a_addNewAccept;
extern Fl_Button *a_addNewCancel;
extern Fl_Double_Window *a_MassCombatWindow;
extern Fl_Browser *a_MCAttackers;
extern Fl_Browser *a_MCDefenders;
#include <FL/Fl_Group.H>
extern Fl_Group *a_MCAttkGrp;
extern Fl_Input *a_MCAttkGroups;
extern Fl_Input *a_MCAttkInGroups;
extern Fl_Input *a_MCAttkBAB;
extern Fl_Input *a_MCAttkDamage;
extern Fl_Group *a_MCDefdGrp;
extern Fl_Input *a_MCDefdInGroups;
extern Fl_Input *a_MCDefdAC;
extern Fl_Input *a_MCDied;
extern Fl_Input *a_MCCurrentHP;
extern Fl_Input *a_MCMaxHP;
extern Fl_Check_Button *a_MCShowTotals;
extern Fl_Browser *a_MCResults;
extern Fl_Button *a_MCCalculate;
extern Fl_Button *a_MCAccept;
extern Fl_Button *a_MCAllDone;
extern Fl_Double_Window *a_d100CombatWindow;
extern Fl_Browser *d1_ActionType;
extern Fl_Browser *d1_ActionMessages;
extern Fl_Button *d1_CancelAction;
extern Fl_Tabs *d1_ActionTab;
extern Fl_Tile *d1_ActionMeleeTab;
extern Fl_Button *d1_CombatSpecAttk1;
extern Fl_Choice *d1_CombatDefenderArmor;
extern Fl_Output *d1_CombatAttacksLeft;
extern Fl_Button *d1_CombatHitThem;
extern Fl_Tile *d1_ActionSpellTab;
extern Fl_Tile *d1_ActionMissileTab;
extern Fl_Tile *d1_ActionHealTab;
extern Fl_Tile *d1_ActionMoveTab;
extern Fl_Choice *d1_CombatMMDifficulty;
extern Fl_Tile *d1_ActionSpellDetailsTab;
extern Fl_Input *d1_SpellSearchName;
extern Fl_Browser *d1_SpellSearchFound;
extern Fl_Browser *d1_SpellSearchDetails;
extern Fl_Tile *d1_ActionDiceRoller;
extern Fl_Browser *d1_CTDRList1;
extern Fl_Browser *d1_CTDRList2;
extern Fl_Browser *d1_CTDRList3;
extern Fl_Browser *d1_CTDRList4;
extern Fl_Browser *d1_CTDRList5;
extern Fl_Browser *d1_CTDRList6;
extern Fl_Browser *d1_CTDRList7;
extern Fl_Browser *d1_CTDRList8;
extern Fl_Button *d1_DRRefresh;
extern Fl_Double_Window *qkEdit_Window;
extern Fl_Input *qkEdit_Name;
extern Fl_Input *qkEdit_HPCurrent;
extern Fl_Input *qkEdit_HPMax;
extern Fl_Input *qkEdit_DBNormal;
extern Fl_Input *qkEdit_ACTouch;
extern Fl_Input *qkEdit_ACFlatFoot;
extern Fl_Input *qkEdit_NoInGroup;
extern Fl_Input *qkEdit_SaveFort;
extern Fl_Input *qkEdit_SaveReflex;
extern Fl_Input *qkEdit_SaveWill;
extern Fl_Input *qkEdit_SavePoison;
extern Fl_Input *qkEdit_SaveDisease;
extern Fl_Input *qkEdit_W1Id;
extern Fl_Input *qkEdit_W1Name;
extern Fl_Input *qkEdit_W1AB1;
extern Fl_Input *qkEdit_W1AB2;
extern Fl_Input *qkEdit_W1AB3;
extern Fl_Input *qkEdit_W1AB4;
extern Fl_Input *qkEdit_W1Damage;
extern Fl_Input *qkEdit_W1Critical;
extern Fl_Input *qkEdit_W2Id;
extern Fl_Input *qkEdit_W2Name;
extern Fl_Input *qkEdit_W2AB1;
extern Fl_Input *qkEdit_W2AB2;
extern Fl_Input *qkEdit_W2AB3;
extern Fl_Input *qkEdit_W2AB4;
extern Fl_Input *qkEdit_W2Damage;
extern Fl_Input *qkEdit_W2Critical;
extern Fl_Input *qkEdit_Space;
extern Fl_Input *qkEdit_Icon;
extern Fl_Button *qkEdit_IconLoad;
extern Fl_Button *qkEdit_Accept;
extern Fl_Button *qkEdit_Cancel;
extern Fl_Double_Window *a_MainWindow;
#include "ADMPdata.h"
#include "ADMPdefines.h"
#include "ADMPd100MeleeCBSetup.h"
#include <FL/Fl_Select_Browser.H>
extern Fl_Tabs *a_TMain;
extern Fl_Tile *a_TCombat;
extern Fl_Browser *a_CBInitiators;
extern Fl_Button *a_CTEndOfRound;
extern Fl_Button *a_CTHelp;
extern Fl_Button *aCB_MoreDetails;
extern Fl_Browser *a_CombatMessages;
extern Fl_Button *a_CombatZoomIn;
extern Fl_Button *a_CombatZoomOut;
extern Fl_Button *a_CombatXZoomIn;
extern Fl_Button *a_CombatXZoomOut;
extern Fl_Button *a_CombatEnableXWindow;
extern Fl_Choice *a_CombatDrawMode;
extern Fl_Group *a_CombatColorGroup;
extern Fl_Choice *a_CombatShapes;
extern Fl_Choice *a_CombatVisibility;
extern Fl_Choice *a_CombatLayer;
extern Fl_Choice *a_CombatShapesFill;
extern Fl_Choice *a_CombatSpecialAction;
extern Fl_Counter *a_CombatShapeWidth;
extern Fl_Counter *a_CombatShapeHeight;
extern gridMap *combatGridMap;
extern Fl_Tile *a_TInitiatives;
extern Fl_Browser *a_IActions;
extern Fl_Group *a_IPlayers;
extern Fl_Group *a_IMonsters;
extern Fl_Tile *a_TGroup;
extern Fl_Browser *a_GroupList;
extern Fl_Group *a_GroupGroup;
extern Fl_Input *a_GroupDescription;
extern Fl_Check_Button *a_GroupActive;
extern Fl_Check_Browser *a_GroupMembers;
extern Fl_Button *a_GroupAccept;
extern Fl_Button *a_GroupCancel;
extern Fl_Button *a_GroupDisableAll;
extern Fl_Button *a_GroupEnableAll;
extern Fl_Button *a_GroupClear;
extern Fl_Button *a_GroupDeleteAll;
extern Fl_Button *a_GroupRemoveAll;
extern Fl_Button *a_GroupDisableSelected;
extern Fl_Button *a_GroupSelectAll;
extern Fl_Button *a_GroupResetAll;
extern Fl_Tile *a_TEdit;
extern Fl_Browser *aEdit_players;
extern Fl_Browser *aEdit_monsters;
extern Fl_Tabs *aEdt_Tabs;
extern Fl_Tile *aEdt_Main;
extern Fl_Input *aEdit_Name;
extern Fl_Menu_Item races[];
extern Fl_Choice *aEdit_Race;
extern Fl_Menu_Item alignment[];
extern Fl_Choice *aEdit_Alignment;
extern Fl_Menu_Item classes[];
extern Fl_Choice *aEdit_Class1;
extern Fl_Choice *aEdit_Class2;
extern Fl_Choice *aEdit_Class3;
extern Fl_Choice *aEdit_Class4;
extern Fl_Input *aEdit_Level1;
extern Fl_Input *aEdit_Level2;
extern Fl_Input *aEdit_Level3;
extern Fl_Input *aEdit_Level4;
extern Fl_Input *aEdit_HPMax;
extern Fl_Input *aEdit_HPCurrent;
extern Fl_Input *aEdit_NonLethal;
extern Fl_Input *aEdit_Inactive;
extern Fl_Input *aEdit_Stun;
extern Fl_Input *aEdit_TempHP;
extern Fl_Input *aEdit_Bleeding;
extern Fl_Input *aEdit_Disabled;
extern Fl_Input *aEdit_Unconcious;
extern Fl_Input *aEdit_Regeneration;
extern Fl_Input *aEdit_EnhHP;
extern Fl_Input *aEdit_ACNormal;
extern Fl_Input *aEdit_ACTouch;
extern Fl_Input *aEdit_ACFlatFoot;
extern Fl_Input *aEdit_NegateCritical;
extern Fl_Input *aEdit_ACSecDex;
extern Fl_Input *aEdit_ACSecSize;
extern Fl_Input *aEdit_ACSecDeflection;
extern Fl_Input *aEdit_ACSecNatural;
extern Fl_Input *aEdit_ACSecArmor;
extern Fl_Input *aEdit_ACSecShield;
extern Fl_Input *aEdit_ACSecDodge;
extern Fl_Input *aEdit_BABMelee1;
extern Fl_Input *aEdit_BABMelee2;
extern Fl_Input *aEdit_BABMelee3;
extern Fl_Input *aEdit_BABRanged1;
extern Fl_Input *aEdit_BABRanged2;
extern Fl_Input *aEdit_BABRanged3;
extern Fl_Input *aEdit_BABGrapple1;
extern Fl_Input *aEdit_BABGrapple2;
extern Fl_Input *aEdit_BABGrapple3;
extern Fl_Input *aEdit_InitBonus;
extern Fl_Input *aEdit_InitRoll;
extern Fl_Input *aEdit_Speed;
extern Fl_Input *aEdit_SaveFort;
extern Fl_Input *aEdit_SaveReflex;
extern Fl_Input *aEdit_SaveWill;
extern Fl_Input *aEdit_IconFilename;
extern Fl_Button *aEdit_LoadIcon;
extern Fl_Input *aEdit_MapX;
extern Fl_Input *aEdit_MapY;
extern Fl_Input *aEdit_Reach;
extern Fl_Input *aEdit_Space;
extern Fl_Input *aEdit_InGroup;
extern Fl_Check_Browser *aEdit_Flags;
extern Fl_Input *aEdit_HitDice;
extern Fl_Input *aEdit_Items;
extern Fl_Input *aEdit_ACNoParry;
extern Fl_Input *aEdit_SavePoison;
extern Fl_Input *aEdit_SaveDisease;
extern Fl_Input *aEdit_RoundsDeathIn;
extern Fl_Input *aEdit_BaseSpells;
extern Fl_Input *aEdit_DirectedSpells;
extern Fl_Choice *aEdit_ArmorWorn;
extern Fl_Choice *aEdit_ArmorLegWorn;
extern Fl_Choice *aEdit_ArmorArmWorn;
extern Fl_Choice *aEdit_ArmorHelmWorn;
extern Fl_Input *aEdit_NoInGroup;
extern Fl_Tile *aEdt_Weapons;
extern Fl_Input *aEdit_NoAttacks;
extern Fl_Browser *aEdit_WeaponSelector;
extern Fl_Check_Button *aEdit_WeaponAvailable;
extern Fl_Input *aEdit_WeaponName;
extern Fl_Button *aEdit_WeaponSearch;
extern Fl_Input *aEdit_WeaponAttkBonus1;
extern Fl_Input *aEdit_WeaponAttkBonus2;
extern Fl_Input *aEdit_WeaponAttkBonus3;
extern Fl_Input *aEdit_WeaponAttkBonus4;
extern Fl_Input *aEdit_WeaponDamage;
extern Fl_Input *aEdit_WeaponCritical;
extern Fl_Input *aEdit_WeaponMagicBonus;
extern Fl_Input *aEdit_WeaponRange;
extern Fl_Input *aEdit_WeaponReach;
extern Fl_Input *aEdit_WeaponNoAttacks;
extern Fl_Input *aEdit_WeaponSpecialMessage;
extern Fl_Choice *aEdit_WeaponType;
extern Fl_Button *aEdit_WeaponClear;
extern Fl_Input *aEdit_WeaponFumble;
extern Fl_Choice *aEdit_WeaponCritAdjustment;
extern Fl_Choice *aEdit_WeaponSize;
extern Fl_Input *aEdit_WeaponAttackTable;
extern Fl_Tile *aEdt_Other;
extern Fl_Input *aEdit_CRating;
extern Fl_Choice *aEdit_Size;
extern Fl_Input *aEdit_XPCurr;
extern Fl_Input *aEdit_XPTemp;
extern Fl_Input *aEdit_d201;
extern Fl_Input *aEdit_d202;
extern Fl_Input *aEdit_d203;
extern Fl_Input *aEdit_d204;
extern Fl_Input *aEdit_d205;
extern Fl_Input *aEdit_d206;
extern Fl_Input *aEdit_d207;
extern Fl_Input *aEdit_SpellDC0;
extern Fl_Input *aEdit_SpellDC1;
extern Fl_Input *aEdit_SpellDC2;
extern Fl_Input *aEdit_SpellDC3;
extern Fl_Input *aEdit_SpellDC4;
extern Fl_Input *aEdit_SpellDC5;
extern Fl_Input *aEdit_SpellDC6;
extern Fl_Input *aEdit_SpellDC7;
extern Fl_Input *aEdit_SpellDC8;
extern Fl_Input *aEdit_SpellFailure;
extern Fl_Input *aEdit_SpellResistance;
extern Fl_Input *aEdit_StatsSTR0;
extern Fl_Input *aEdit_StatsSTR1;
extern Fl_Input *aEdit_StatsDEX0;
extern Fl_Input *aEdit_StatsDEX1;
extern Fl_Input *aEdit_StatsCON0;
extern Fl_Input *aEdit_StatsCON1;
extern Fl_Input *aEdit_StatsINT0;
extern Fl_Input *aEdit_StatsINT1;
extern Fl_Input *aEdit_StatsWIS0;
extern Fl_Input *aEdit_StatsWIS1;
extern Fl_Input *aEdit_StatsCHA0;
extern Fl_Input *aEdit_StatsCHA1;
extern Fl_Input *aEdit_DamReductionHP;
extern Fl_Input *aEdit_DamReductionWeapon;
extern Fl_Choice *aEdit_DamReductionType;
extern Fl_Input *aEdit_SkillSearch;
extern Fl_Input *aEdit_SkillSOH;
extern Fl_Input *aEdit_SkillSpot;
extern Fl_Input *aEdit_SkillOLocks;
extern Fl_Input *aEdit_SkillMoveSilently;
extern Fl_Input *aEdit_SkillConcentration;
extern Fl_Input *aEdit_SkillListen;
extern Fl_Input *aEdit_SkillHide;
extern Fl_Input *aEdit_SpellSlotMax0;
extern Fl_Input *aEdit_SpellSlotCur0;
extern Fl_Input *aEdit_SpellSlotMax1;
extern Fl_Input *aEdit_SpellSlotCur1;
extern Fl_Input *aEdit_SpellSlotMax2;
extern Fl_Input *aEdit_SpellSlotCur2;
extern Fl_Input *aEdit_SpellSlotMax3;
extern Fl_Input *aEdit_SpellSlotCur3;
extern Fl_Input *aEdit_SpellSlotMax4;
extern Fl_Input *aEdit_SpellSlotCur4;
extern Fl_Input *aEdit_SpellSlotMax5;
extern Fl_Input *aEdit_SpellSlotCur5;
extern Fl_Input *aEdit_SpellSlotMax6;
extern Fl_Input *aEdit_SpellSlotCur6;
extern Fl_Input *aEdit_SpellSlotMax7;
extern Fl_Input *aEdit_SpellSlotCur7;
extern Fl_Input *aEdit_SpellSlotMax8;
extern Fl_Input *aEdit_SpellSlotCur8;
extern Fl_Input *aEdit_SpellSlotMax9;
extern Fl_Input *aEdit_SpellSlotCur9;
extern Fl_Input *aEdit_SpellResistanceFire1;
extern Fl_Input *aEdit_SpellResistanceFire2;
extern Fl_Input *aEdit_SpellResistanceAcid1;
extern Fl_Input *aEdit_SpellResistanceAcid2;
extern Fl_Input *aEdit_SpellResistanceCold1;
extern Fl_Input *aEdit_SpellResistanceCold2;
extern Fl_Input *aEdit_SpellResistanceElec1;
extern Fl_Input *aEdit_SpellResistanceElec2;
extern Fl_Input *aEdit_SpellResistanceSonic1;
extern Fl_Input *aEdit_SpellResistanceSonic2;
extern Fl_Input *aEdit_RoundsSpellChg;
extern Fl_Input *aEdit_RoundsMissileChg;
extern Fl_Tile *aEdit_TNotes;
#include <FL/Fl_Text_Editor.H>
extern Fl_Text_Editor *aEdit_Notes;
extern Fl_Button *aEdt_Accept;
extern Fl_Button *aEdt_Cancel;
extern Fl_Choice *aEdit_SpecialActions;
extern Fl_Input *a_EdtQkMonstSearch;
extern Fl_Browser *a_EdtQkMonList;
extern Fl_Counter *a_EdtQkMonAddCtr;
extern Fl_Button *aEdit_AddQkMonsters;
extern Fl_Button *aEdit_EditQkMonsters;
extern Fl_Button *aEdit_QkMonstersWildSearch;
extern Fl_Counter *a_EdtQkMonCRSearch;
extern Fl_Button *aEdit_Dump;
extern Fl_Group *aEL_CalculatorGroup;
extern Fl_Counter *aELC_ELLevel;
extern Fl_Browser *aELC_Results;
extern Fl_Choice *a_EdtQkMonCREnvironment;
extern Fl_Button *aEdit_SaveQkMonsters;
extern Fl_Button *aEdt_QkMonsterAdd;
extern Fl_Input *a_EdtQkMonstIconFilename;
extern Fl_Button *a_EdtQkMonstIconLoad;
extern Fl_Check_Button *aEdit_showEnabled;
extern Fl_Tile *a_TOther;
extern Fl_Tabs *a_OTabs;
extern Fl_Tile *a_OTAutoDamage;
extern Fl_Check_Browser *a_OTADList;
extern Fl_Button *a_OTADAccept;
extern Fl_Button *a_OTADCancel;
extern Fl_Check_Browser *a_OTADInitiateList;
extern Fl_Check_Browser *a_OTADReceiveList;
extern Fl_Input *a_OTADDescription;
extern Fl_Input *a_OTADDamage;
extern Fl_Input *a_OTADRounds;
extern Fl_Input *a_OTADRoundsDone;
extern Fl_Check_Browser *a_OTADFlags;
extern Fl_Choice *a_OTADType;
extern Fl_Tile *a_TMassSkillCheck;
extern Fl_Check_Browser *aMSC_DoingList;
extern Fl_Button *aMSC_refresh;
extern Fl_Button *aMSC_DisableAllPlayers;
extern Fl_Button *aMSC_DisableAllMonsters;
extern Fl_Button *aMSC_DisableUnsetAll;
extern Fl_Input *aMSC_DCValue;
extern Fl_Choice *aMSC_flags;
extern Fl_Choice *aMSC_SkillList;
extern Fl_Button *aMSC_Calculate;
extern Fl_Browser *aMSC_ResultList;
extern Fl_Tile *a_TLogFile;
extern Fl_Browser *aLF_Logfile;
extern Fl_Button *aFL_Refresh;
extern Fl_Tile *a_TQkIcon;
extern Fl_Button *a_qkIconRefresh;
extern Fl_Check_Browser *a_qkIconList;
extern Fl_Button *a_qkIconLoad;
extern Fl_Input *a_qkIconIcon;
extern Fl_Input *a_qkIconSpace;
extern Fl_Input *a_qkIconReach;
extern Fl_Button *a_qkIconDoit;
extern Fl_Tile *T_massWeaponCopy;
extern Fl_Check_Browser *mWC_FromList;
extern Fl_Check_Browser *mWC_ToList;
extern Fl_Button *mWC_Refresh;
extern Fl_Button *mWC_WeaponCopy;
extern Fl_Button *mWC_AllCopy;
extern Fl_Tile *t_QkSpelllists;
extern Fl_Choice *qsl_castertype;
extern Fl_Counter *qsl_casterlevel;
extern Fl_Input *qsl_spellsLevel1;
extern Fl_Input *qsl_spellsLevel2;
extern Fl_Input *qsl_spellsLevel3;
extern Fl_Input *qsl_spellsLevel4;
extern Fl_Input *qsl_spellsLevel5;
extern Fl_Input *qsl_spellsLevel6;
extern Fl_Input *qsl_spellsLevel7;
extern Fl_Input *qsl_spellsLevel8;
extern Fl_Input *qsl_spellsLevel9;
extern Fl_Input *qsl_AttackRating;
extern Fl_Input *qsl_DefenceRating;
extern Fl_Button *qsl_DoIt;
extern Fl_Input *qsl_spellLists;
extern Fl_Tile *t_HealMonsters;
extern Fl_Group *gHM_Monsters;
extern Fl_Button *bHM_Refresh;
extern Fl_Button *bHM_Accept;
extern Fl_Input *iHM_allMonsters;
extern Fl_Tile *a_TSystem;
extern Fl_Input *aSys_Rounds;
extern Fl_Choice *aSys_Bleeding;
extern Fl_Choice *aSys_XPAllocation;
extern Fl_Choice *aSys_GroupInitiatives;
extern Fl_Choice *aSys_MultipleAttacks;
extern Fl_Input *aSys_AttkSep1;
extern Fl_Input *aSys_AttkSep2;
extern Fl_Input *aSys_AttkSep3;
extern Fl_Input *aSys_AttkSep4;
extern Fl_Input *aSys_saveRounds;
extern Fl_Input *aSys_playerFilename;
extern Fl_Input *aSys_monsterFilename;
extern Fl_Button *aSys_SaveAll;
extern Fl_Button *aSys_LoadAll;
extern Fl_Button *aSys_LoadMonster;
extern Fl_Button *aSys_SaveMonster;
extern Fl_Button *aSys_Reset4NewCombat;
extern Fl_Check_Browser *aSys_flags;
extern Fl_Button *aSys_LoadPlayer;
extern Fl_Button *aSys_Reset4NewDay;
extern Fl_Input *aSys_Version;
extern Fl_Input *aSys_mapFilename;
extern Fl_Button *aSys_LoadMap;
extern Fl_Button *aSys_SaveMap;
extern Fl_Input *aSys_MapWidth;
extern Fl_Input *aSys_MapHeight;
extern Fl_Button *aSys_ClearMap;
extern Fl_Button *aSys_ResizeMap;
#include <FL/Fl_Slider.H>
extern Fl_Slider *aSys_ScreenWidth;
extern Fl_Slider *aSys_ScreenHeight;
extern Fl_Button *aSys_ResetTrigAdjustments;
extern Fl_Counter *aSys_MapColorFrom;
extern Fl_Counter *aSys_MapColorTo;
extern Fl_Button *aSys_DoMapColor;
extern Fl_Counter *aSys_DecRnds;
extern Fl_Button *aSys_DecRndAction;
extern Fl_Choice *aSys_diceSystem;
extern Fl_Choice *aSys_initSystem;
extern Fl_Button *aSys_BackupFiles;
extern Fl_Tile *a_TNotes;
extern Fl_Text_Editor *a_NotesArea;
extern Fl_Button *a_NotesLoad;
extern Fl_Button *a_NotesSave;
extern Fl_Tile *a_OTDiceRoller;
extern Fl_Browser *a_ODRList1;
extern Fl_Counter *a_ODRCount;
extern Fl_Button *a_ODRReroll;
extern Fl_Browser *a_ODRList2;
extern Fl_Browser *a_ODRList3;
extern Fl_Browser *a_ODRList4;
extern Fl_Browser *a_ODRList5;
extern Fl_Browser *a_ODRList6;
extern Fl_Browser *a_ODRList7;
extern Fl_Browser *a_ODRList8;
extern Fl_Group *a_SpellListGroup;
extern Fl_Input *a_SLSpellSearch;
extern Fl_Browser *a_SLSpellSearchList;
extern Fl_Help_View *a_SLSpellSearchDetails;
extern Fl_Tile *a_OTStatus;
extern Fl_Button *a_OStatusRefresh;
extern Fl_Browser *a_OStatusList;
extern Fl_Tile *a_TSRD;
extern Fl_Help_View *a_SRDText;
extern Fl_Button *a_SRDIndex;
extern Fl_Button *a_SRDPreviousPage;
extern Fl_Tile *a_TQkHeal;
extern Fl_Group *g_QuickHeal;
extern Fl_Button *a_qkheal_refresh;
extern Fl_Button *a_qkheal_accept;
extern Fl_Input *a_qkheal_ln00;
extern Fl_Input *a_qkheal_ln01;
extern Fl_Input *a_qkheal_ln10;
extern Fl_Input *a_qkheal_ln11;
extern Fl_Input *a_qkheal_ln20;
extern Fl_Input *a_qkheal_ln21;
extern Fl_Input *a_qkheal_ln30;
extern Fl_Input *a_qkheal_ln31;
extern Fl_Input *a_qkheal_ln40;
extern Fl_Input *a_qkheal_ln41;
extern Fl_Input *a_qkheal_ln50;
extern Fl_Input *a_qkheal_ln51;
extern Fl_Input *a_qkheal_ln60;
extern Fl_Input *a_qkheal_ln61;
extern Fl_Input *a_qkheal_ln70;
extern Fl_Input *a_qkheal_ln71;
extern Fl_Input *a_qkheal_ln80;
extern Fl_Input *a_qkheal_ln81;
extern Fl_Input *a_qkheal_ln90;
extern Fl_Input *a_qkheal_ln91;
extern Fl_Input *a_qkheal_all;
extern Fl_Group *aMisc_Enable;
extern Fl_Check_Browser *a_OTDisableList;
extern Fl_Button *a_OTDisableRefresh;
extern Fl_Button *a_OTDisableAllPlayers;
extern Fl_Button *a_OTDisableAllMonsters;
extern Fl_Button *a_OTDisableUnsetAll;
extern Fl_Check_Browser *a_OTDisableActionList;
extern Fl_Button *a_OTDisableDoAction;
extern Fl_Group *aMisc_XPCalc;
extern Fl_Input *a_OXPPartyLevel;
extern Fl_Check_Button *a_OXPCalcIncAll;
extern Fl_Button *a_OXPCalcRefresh;
extern Fl_Input *a_OXPValue;
extern Fl_Button *a_OXPAdd;
extern Fl_Browser *a_OXPCalcList;
extern Fl_Button *aMisc_Reset4NewCombat;
extern Fl_Button *aMisc_Reset4NewDay;
extern Fl_Button *aMisc_ResetTrigAdjustments;
extern Fl_Counter *aMisc_DecRnds;
extern Fl_Button *aMisc_DecRndAction;
extern Fl_Group *aMisc_SpecialActions;
extern Fl_Browser *a_OOActionList;
extern Fl_Button *a_OOtherAction;
extern Fl_Output *a_OOtherActionDescription;
extern Fl_Tile *T_AlertName;
extern Fl_Group *ant_Grp1;
extern Fl_Check_Browser *a_OTTriggerList;
extern Fl_Input *a_OTTriggerRounds;
extern Fl_Input *a_OTTriggerMessage;
extern Fl_Check_Button *a_OTTriggerEveryRound;
extern Fl_Input *a_OTTriggerEvery;
extern Fl_Button *a_OTTriggerAccept;
extern Fl_Button *a_OTTriggerCancel;
extern Fl_Group *ant_Grp2;
extern Fl_Browser *aGN_NameList1;
extern Fl_Button *aGN_Refresh;
extern Fl_Browser *aGN_NameList2;
extern Fl_Browser *aGN_NameList3;
extern Fl_Group *ant_Grp3;
extern Fl_Counter *aRT_ELLevel;
extern Fl_Button *aRT_Generate;
extern Fl_Counter *aRT_ItemCount;
extern Fl_Choice *aRT_ItemType;
extern Fl_Button *aRT_ItemGenerate;
extern Fl_Text_Editor *aRT_Treasure;
extern Fl_Text_Editor *aRT_ItemList;
extern Fl_Group *ant_NPC;
extern Fl_Choice *a_NPCClass;
extern Fl_Choice *a_NPCRace;
extern Fl_Choice *a_NPCAlignment;
extern Fl_Counter *a_NPCLevel;
extern Fl_Button *a_NPCGenerate;
extern Fl_Button *a_NPCSave;
extern Fl_Browser *a_NPCText;
extern Fl_Tile *t_SpellAdjustments;
extern Fl_Tabs *t_SpellAdjustmentsAll;
extern Fl_Tile *t_SpellAdjustmentsSystem;
extern Fl_Check_Browser *a_OTAdjustList;
extern Fl_Check_Browser *a_OTAdjustSystemList;
extern Fl_Check_Browser *a_OTAdjustEffects;
extern Fl_Button *a_OTAdjustAccept;
extern Fl_Button *a_OTAdjustCancel;
extern Fl_Input *a_OTAdjustRounds;
extern Fl_Input *a_OTAdjustMessage;
extern Fl_Button *a_OTAdjustSystemSave;
extern Fl_Check_Browser *a_OTAdjustIDEnds;
extern Fl_Button *a_OTAdjustDump;
extern Fl_Counter *a_OTAdjustDecRnds;
extern Fl_Button *a_OTAdjustDecRndAction;
extern Fl_Button *a_OTAdjustPredef;
extern Fl_Group *a_OTAdjustGroup;
extern Fl_Input *a_OTAdjustValue1;
extern Fl_Choice *a_OTAdjustType1;
extern Fl_Choice *a_OTAdjustEffectsType1;
extern Fl_Input *a_OTAdjustValue2;
extern Fl_Choice *a_OTAdjustType2;
extern Fl_Choice *a_OTAdjustEffectsType2;
extern Fl_Input *a_OTAdjustValue3;
extern Fl_Choice *a_OTAdjustType3;
extern Fl_Choice *a_OTAdjustEffectsType3;
extern Fl_Input *a_OTAdjustValue4;
extern Fl_Choice *a_OTAdjustType4;
extern Fl_Choice *a_OTAdjustEffectsType4;
extern Fl_Input *a_OTAdjustValue5;
extern Fl_Choice *a_OTAdjustType5;
extern Fl_Choice *a_OTAdjustEffectsType5;
extern Fl_Tile *t_SpellAdjustmentsQuick;
extern Fl_Button *b_quickModsRefresh;
extern Fl_Button *b_quickModsAccept;
extern Fl_Button *b_quickModsClear;
#endif
